{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Development\\\\React\\\\Complete React Projects\\\\myapp\\\\src\\\\components\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ExpensesList from './ExpensesList';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpenseFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  // Filter expenses according to selected year\n  const filteredExpenses = data.filter(expense => expense.date.getFullYear().toString() === filteredYear);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onFilterChange: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpensesList","Card","ExpensesFilter","Expenses","data","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","filter","expense","date","getFullYear","toString","expensesContent"],"sources":["C:/Users/Hassan/Development/React/Complete React Projects/myapp/src/components/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ExpensesList from './ExpensesList';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpenseFilter';\r\n\r\nconst Expenses = ({ data }) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  // Filter expenses according to selected year\r\n  const filteredExpenses = data.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  \r\n\r\n  return (\r\n    <Card className='expenses'>\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onFilterChange={filterChangeHandler}\r\n      />\r\n\r\n      {expensesContent}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,iBAAiB;AAAC;AAE7C,MAAMC,QAAQ,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMQ,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGL,IAAI,CAACM,MAAM,CACjCC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKT,YAAY,CACpE;EAID,oBACE,QAAC,IAAI;IAAC,SAAS,EAAC,UAAU;IAAA,wBACxB,QAAC,cAAc;MACb,QAAQ,EAAEA,YAAa;MACvB,cAAc,EAAEE;IAAoB;MAAA;MAAA;MAAA;IAAA,QACpC,EAEDQ,eAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEX,CAAC;AAAC,GAxBIZ,QAAQ;AAAA,KAARA,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}